name: Pull Request

on:
  pull_request:
    branches:
      - master
      - release/**
      - develop
      - main

jobs:
  Run-Linters:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Notify Slack (Starting)
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: starting
          steps: ${{ toJson(steps) }}
        if: always()
      
      - name: Checkout code
        id: Checkout-code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Setup SSH
        id: Setup-SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Flutter
        id: Setup-flutter
        uses: subosito/flutter-action@v2  
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        id: Install-dependencies
        run: flutter pub get

      - name: Run linter
        id: Run-linter
        run: |
          flutter --version
          dart --version
          flutter analyze

      - name: Notify Slack
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()

  Sonar-Scanner:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Notify Slack (Starting)
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: starting
          steps: ${{ toJson(steps) }}
        if: always()
      
      - name: Checkout code
        id: Checkout-code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Setup SSH
        id: Setup-SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Flutter
        id: Setup-flutter
        uses: subosito/flutter-action@v2  
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        id: Install-dependencies
        run: flutter pub get
     
      - name: Sonar scanner
        id: Sonar-scan
        env:
          SONAR_SCANNER_VER: sonar-scanner-cli-4.7.0.2747-linux
          SONAR_SCANNER_PATH: sonar-scanner-4.7.0.2747-linux/bin
        run: |
          wget --quiet https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip -q sonar-scanner-cli-4.7.0.2747-linux.zip
          $SONAR_SCANNER_PATH/sonar-scanner -v
          $SONAR_SCANNER_PATH/sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

      - name: Quality gate check
        id: Quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Notify Slack
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
      
  Integration-Test:
    runs-on: macos-latest
    if: ${{ github.event_name == 'pull_request' && (github.base_ref == 'master' || github.base_ref == 'main' || github.base_ref == 'develop' || startsWith(github.base_ref, 'release')) }} 
    permissions: write-all
    environment: manual
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Notify Slack (Starting)
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: starting
          steps: ${{ toJson(steps) }}
        if: always()

      - name: Checkout code
        id: Checkout-code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Setup SSH
        id: Setup-SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Flutter
        id: Setup-flutter
        uses: subosito/flutter-action@v2 
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        id: Install-dependencies
        run: flutter pub get
        
      - name: Flutter Enable Web
        id: flutter-enable-web
        run: flutter config --enable-web

      - name: Start Safari Driver
        id: start-driver
        run: |
          sudo safaridriver --enable
          safaridriver --port 4444 &

      - name: Integration Test
        id: Integration-test
        run: |
          flutter drive --driver=test_driver/integration_test.dart --target=test/sauna_session_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari
          flutter drive --driver=test_driver/integration_test.dart --target=test/sleep_mode_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari
          flutter drive --driver=test_driver/integration_test.dart --target=test/temperature_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari
          flutter drive --driver=test_driver/integration_test.dart --target=test/timer_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari
          flutter drive --driver=test_driver/integration_test.dart --target=test/timer_session_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari
      
      - name: Notify Slack 
        uses: act10ns/slack@v2
        with:
          channel: s1-panel
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
