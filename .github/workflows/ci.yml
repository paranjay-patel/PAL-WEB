
name: Pull Request

on:
  # push:
  #   branches:
  #     - reply-notification
  pull_request:
    branches:
      - master
      - release*
      - develop
      - main
      - feature

jobs:
  Code-Analysis:
    runs-on: ubuntu-latest
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}   
    steps:
      - id: Workflow_starting
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "attachments": [
                {
                  "pretext": "*A new PR workflow has started!* :star:",
                  "color": "#0073e6",
                  "fields": [
                    {
                      "title": "Pull Request",
                      "value": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>",
                      "short": false
                    },

                    {
                      "title": "Source Branch",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/tree/${{ github.event.pull_request.head.ref }}|${{ github.event.pull_request.head.ref }}>",
                      "short": true
                    },
                    {
                      "title": "Author",
                      "value": "<https://github.com/${{ github.event.pull_request.user.login }}|${{ github.event.pull_request.user.login }}>",
                      "short": true
                    },
                    {
                      "title": "Target Branch",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/tree/${{ github.event.pull_request.base.ref }}|${{ github.event.pull_request.base.ref }}>",
                      "short": true
                    },
                    {
                      "title": "Status",
                      "value": "In Progress",
                      "short": true
                    }
                  ],
                  "actions": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github: View Pull Request"
                      },
                      "url": "${{ github.event.pull_request.html_url }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": ":github: View Action"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ],               
                }
              ]
            }

      - name: Checkout code
        id: Checkout_code
        needs: Workflow_starting
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Setup SSH
        id: Setup-SSH
        needs: Checkout_code
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Flutter
        id: Setup_flutter
        needs: Checkout_code
        uses: subosito/flutter-action@v2  
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        id: Install_dependencies
        needs: Setup_flutter
        run: flutter pub get

      - name: Run linter
        id: Run_linter
        needs: Install_dependencies
        run: |
          flutter analyze
  
      - name: Notify linter success
        if: success()
        id: Linter_successfull_notify
        uses: slackapi/slack-github-action@v1.24.0
        needs: Run_linter
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.deployment_message.outputs.ts }}",
              "text": "Linting Successfull"
            }
      
      - name: Notify linter failure
        if: failure()
        id: Linter_failed_notify
        uses: slackapi/slack-github-action@v1.24.0
        needs: Run_linter
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.deployment_message.outputs.ts }}",
              "text": "Linting failed"
            }

      - name: Sonar scanner
        id: Sonar_scan
        needs: Run_linter
        env:
          SONAR_SCANNER_VER: sonar-scanner-cli-4.7.0.2747-linux
          SONAR_SCANNER_PATH: sonar-scanner-4.7.0.2747-linux/bin
        run: |
          wget --quiet https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip -q sonar-scanner-cli-4.7.0.2747-linux.zip
          $SONAR_SCANNER_PATH/sonar-scanner -v
          $SONAR_SCANNER_PATH/sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

      - name: Quality gate check
        id: Quality_gate_check
        needs: Sonar_scan
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.deployment_message.outputs.ts }}",
              "text": "workflow Successfull"
            }

      - uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.deployment_message.outputs.ts }}",
              "text": "Deployment finished second (Completed)"
            }
