name: Pull Request

on:
  # push:
  #   branches:
  #     - reply-notification
  pull_request:
    branches:
      - master
      - release*
      - develop
      - main
      - feature

jobs:
  Pull_Request:
    runs-on: ubuntu-latest
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}   
    steps:
      - name: Notify Workflow Starting
        id: Notify_workflow_starting
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "attachments": [
                {
                  "pretext": "A new *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>* workflow has been initiated by *<https://github.com/${{ github.event.pull_request.user.login }}|${{ github.event.pull_request.user.login }}>* for *<https://github.com/${{ github.repository }}|${{ github.repository }}>* ðŸš€ ",
                  "color": "#0073e6",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "In Progress",
                      "short": true
                    },
                    {
                      "title": "Pull Request",
                      "value": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>",
                      "short": true
                    }
                  ]               
                }
              ]
            }

      - name: Checkout code
        id: Checkout_code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Setup SSH
        id: Setup-SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # - name: Set up Flutter
      #   id: Setup_flutter
      #   uses: subosito/flutter-action@v2  
      #   with:
      #     flutter-version: '3.22.0'

      # - name: Install dependencies
      #   id: Install_dependencies
      #   run: flutter pub get

      # - name: Run linter
      #   id: Run_linter
      #   run: |`
      #     flutter analyze
  
      - name: Notify linter success
        if: success()
        id: Notify_linter_success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "PR Workflow Status!",
                  "color": "#1aff1a",
                  "fields": [
                    {
                      "title": "Linting",
                      "value": "Successful",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }

      - name: Notify linter failure
        if: failure()
        id: Linter_failed_notify
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "PR Workflow Status! :fire_engine:",
                  "color": "#FF1A1A",
                  "fields": [
                    {
                      "title": "Linting",
                      "value": "Failed",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }

      - name: Sonar scanner
        id: Sonar_scan
        env:
          SONAR_SCANNER_VER: sonar-scanner-cli-4.7.0.2747-linux
          SONAR_SCANNER_PATH: sonar-scanner-4.7.0.2747-linux/bin
        run: |
           echo "Sonar Scanner"
  #        wget --quiet https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
  #        unzip -q sonar-scanner-cli-4.7.0.2747-linux.zip
  #        $SONAR_SCANNER_PATH/sonar-scanner -v
  #        $SONAR_SCANNER_PATH/sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

      # - name: Quality gate check
      #   id: Quality_gate_check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Notify sonar success
        if: success()
        id: Notify_sonar_success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "Workflow Status!",
                  "color": "#1aff1a",
                  "fields": [
                    {
                      "title": "Sonar-Scan",
                      "value": "Successful",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }

      - name: Notify Sonar Failure
        if: failure()
        id: Notify_sonar_failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "PR Workflow Status!",
                  "color": "#FF1A1A",
                  "fields": [
                    {
                      "title": "Sonar-Scan",
                      "value": "Failed",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }

      - name: Update Workflow Success
        id: Update_workflow_success
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C07B6R6NYUW"
          update-ts: ${{ steps.Notify_workflow_starting.outputs.ts }}
          payload: |
            {
              "attachments": [
                {
                  "pretext": "A *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>* workflow initiated by *<https://github.com/${{ github.event.pull_request.user.login }}|${{ github.event.pull_request.user.login }}>* for *<https://github.com/${{ github.repository }}|${{ github.repository }}>* has completed successfully. âœ…",
                  "color": "#1aff1a",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "Successful",
                      "short": true
                    },
                    {
                      "title": "Pull Request",
                      "value": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>",
                      "short": true
                    }
                  ]               
                }
              ]
            }

      - name: Update Workflow Failure
        id: Update_workflow_failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C07B6R6NYUW"
          update-ts: ${{ steps.Notify_workflow_starting.outputs.ts }}
          payload: |
            {
              "attachments": [
                {
                  "pretext": "A *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>* workflow initiated by *<https://github.com/${{ github.event.pull_request.user.login }}|${{ github.event.pull_request.user.login }}>* for *<https://github.com/${{ github.repository }}|${{ github.repository }}>* has failed. ðŸš¨",
                  "color": "#FF1A1A",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "Failed",
                      "short": true
                    },
                    {
                      "title": "Pull Request",
                      "value": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>",
                      "short": true
                    }
                  ]               
                }
              ]
            }

  integration_test:
    runs-on: ubuntu-latest
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}   
    steps:
      - name: Checkout code
        id: Checkout_code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Setup SSH
        id: Setup-SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Set up Flutter
        id: Setup_flutter
        uses: subosito/flutter-action@v2  
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        id: Install_dependencies
        run: flutter pub get

      - name: Install Chromedriver
        id: Install_Chromedriver
        run: |
          echo "################################################   1  ######################################################"
          wget --quiet https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
          echo "################################################   2  ######################################################"
          tar -xvf chromedriver_linux64.tar.gz
          echo "################################################   3  ######################################################"
          chmod +x chromedriver
          echo "################################################   4  ######################################################"
          sudo mv chromedriver /usr/bin/
          echo "################################################   5  ######################################################"
          chromedriver --version
          echo "################################################   6  ######################################################"
          chromedriver --port 4444 &
          
      - name: Run Integration Test
        id: Run_Integration_test
        run: |
          flutter drive --driver=test_driver/integration_test.dart --target=test/sauna_session_test.dart --flavor=red --dart-define=flavor=red -d web-server --release --browser-name=safari

      - name: Notify Integration Test Success
        if: success()
        id: Notify_Integration_Test_Success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "PR Workflow Status!",
                  "color": "#1aff1a",
                  "fields": [
                    {
                      "title": "Integration Test",
                      "value": "Successful",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }
            
      - name: Notify Integration Test Failure
        if: failure()
        id: Notify_Integration_Test_Failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C07B6R6NYUW"
          payload: |
            {
              "thread_ts": "${{ steps.Notify_workflow_starting.outputs.ts }}",
              "attachments": [
                {
                  "pretext": "PR Workflow Status!",
                  "color": "#1aff1a",
                  "fields": [
                    {
                      "title": "Integration Test",
                      "value": "Failure",
                      "short": true
                    },
                    {
                      "title": "Workflow",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Pull Request>",
                      "short": true
                    }
                  ]
                }
              ]
            }
